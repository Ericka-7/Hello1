<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.atguigu.maven</groupId>
    <artifactId>A</artifactId>
    <version>1.0-SNAPSHOT</version>


    <!-- 子工程继承父工程 -->
    <parent>
        <groupId>com.atguigu.maven</groupId>
        <artifactId>Hello1</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <dependencies>

        <!-- 解决冲突：路径相同时，先声明者优先
        <dependency>
            <groupId>com.atguigu.maven</groupId>
            <artifactId>D</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency> -->

        <!-- A 直接依赖 B
             B 直接依赖 C
             A 间接依赖 C
         -->
        <dependency>
            <groupId>com.atguigu.maven</groupId>
            <artifactId>B</artifactId>
            <version>1.0-SNAPSHOT</version>
            <!--
                A依赖于B,但是不希望将B项目的包传递给A,
                A可以采用依赖排除，将不需要的包干掉。
                只需要指定坐标的g和a即可。
             -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
            </exclusions>

        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!--<version>4.9</version>-->
            <!-- 依赖范围： test 测试范围
                ①src/main/java目录下的类不可以使用【编译环境】
                ②src/test/java目录下的类可以使用【测试环境】
                ③当前包不参与部署【生产环境】
                ④test范围的包不具有传递性
            -->
            <!--<scope>test</scope>-->
        </dependency>
    </dependencies>
</project>